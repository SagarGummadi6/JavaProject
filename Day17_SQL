CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    total DECIMAL(10,2)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT,
    product_id INT,
    total DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customers(id),
    FOREIGN KEY (product_id) REFERENCES products(id)
);

INSERT INTO customers (id, name, total) VALUES
(1, 'Alice', 120.00),
(2, 'Bob', 80.00),
(3, 'Charlie', 150.00);

SELECT * from customers;

INSERT INTO products (id, name, price) VALUES
(1, 'Book', 20.00),
(2, 'Pen', 5.00),
(3, 'Notebook', 15.00);

SELECT * from products;

INSERT INTO orders (id, customer_id, product_id, total) VALUES
(1, 1, 1, 20.00),
(2, 1, 3, 15.00),
(3, 2, 2, 5.00),
(4, 3, 1, 20.00),
(5, 3, 3, 15.00),
(6, 3, 2, 5.00);

SELECT * from orders;

/*QUESTION 1*/

SELECT AVG(total)
FROM customers;

SELECT name, total
FROM customers
WHERE total > (
    SELECT AVG(total)
    FROM customers
);

/*QUESTION 2*/

SELECT product_id, COUNT(*) AS times_ordered
FROM orders
GROUP BY product_id
HAVING COUNT(*) > 1;

SELECT product_id, SUM(total) AS total_sum_per_person
FROM orders
GROUP BY product_id;

/*QUESTION 3*/
SELECT AVG(total)
FROM customers;

SELECT name, SUM(total) AS total_spent, (SELECT AVG(total)
FROM customers) AS avg_spent
FROM customers
GROUP BY name;

/*QUESTION 4*/

SELECT products.name, SUM(orders.total) AS total_sales
FROM orders
JOIN products ON orders.product_id = products.id
GROUP BY products.name;

/*QUESTION 5*/

SELECT MAX(price)
FROM products;

SELECT name
FROM products
WHERE price = (
    SELECT MAX(price)
    FROM products
);
